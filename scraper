#!/usr/bin/env perl

use strict;
use warnings;
use LWP::UserAgent;
use HTTP::Request;
use Web::Scraper;
use JSON;

# url to process
my $url = "https://content.wetu.com/Africa";
my $ua = LWP::UserAgent->new(
    ssl_opts => { verify_hostname => 0 },
    protocols_allowed => ['https'],
);
my $req = HTTP::Request->new( GET => $url);
my $response = $ua->request($req);

# save the output json to file
open (FILE, ">wetu_contents.json");

# scraper format
my $sitedata = scraper {
    process 'table#brochures tr', 'propertyData[]' => sub {
        my $elem = shift;
        my $data_id = $elem->{'data-id'};
        my @data = ();
        if($data_id){
            for my $node ($elem->findnodes( ".//td" )) {
                if($node->findnodes(".//a")){
                    foreach my $href ($node->findnodes(".//a")){
                        push @data, $href->{href};
                    }
                }
                else{
                    push @data, $node->as_text;
                }
            }
            
            return { $data_id => \@data };
        }
        else{
            return {};
        }
    };
};

# scrap the url
my $res = $sitedata->scrape( $response->content );

my $master_property_data = {};
# iterate the array 'propertyData'
for my $property ( @{ $res->{propertyData} } ) {
    foreach my $property_id ( keys %{ $property } ){

        my $attributes = $property->{$property_id};

        # get description, room types, propery type, facilities for each property by scraping individual links
        my $rooms = get_rooms( $property_id );

        push @{ $master_property_data->{$property_id} }, {
                                                            'property'           => $attributes->[0],
                                                            'destination'        => $attributes->[1],
                                                            'country'            => $attributes->[2],
                                                            'description'        => $rooms->{'description'},
                                                            'room_types'         => $rooms->{'room_types'},
                                                            'facilities'         => $rooms->{'facilities'},
                                                        };
    }
}

# convert the data to json and dump to file
my $json_data = encode_json $master_property_data;
print FILE $json_data;
close(FILE);

sub get_rooms {
    my $property_id = shift;
    my $url = "https://wetu.com/Embed/Mini/index/$property_id?op=&desc=1#rooms";
    my $req = HTTP::Request->new( GET => $url);
    my $response = $ua->request($req);

    my $rooms_data = scraper {
        process "div.room-select > select > option", 'roomtypes[]' => 'TEXT';
        process "div#description", 'description' => scraper {
            process "p", "para[]" => 'TEXT';
        };

        process "div.fact", "facilities[]" => scraper {
            process "div.fact-title", "title" => 'TEXT';
            process "div.fact-column-wrapper > div.fact-column", "title_attributes[]" => 'TEXT'; 
        };

        process "div.fact-column-wrapper-stats", "facilities_stats" => scraper {
            process "div.fact-column", "title_attributes[]" => 'TEXT'; 
        };
    };

    my $res = $rooms_data->scrape( $response->content );
    my $room_data = {};
    
    $room_data->{'description'}     = $res->{'description'}{'para'} ? join "\n", @{ $res->{'description'}{'para'} } : "";
    $room_data->{'room_types'}      = $res->{'roomtypes'};

    my $facilities_attr = $res->{'facilities_stats'}{'title_attributes'};
    if($facilities_attr){
        for (my $i=0; $i<@{$facilities_attr}; $i++){
            if(! ($i % 2)){
                push @{ $room_data->{'facilities'} }, { lc($facilities_attr->[$i]) => $facilities_attr->[$i+1] };
            }
        }
    }
    
    foreach my $facility ( @{ $res->{'facilities'} } ){
        if( $facility->{ 'title' } ){
            push @{ $room_data->{'facilities'} } , { lc( $facility->{ 'title' } ) => $facility->{ 'title_attributes' } };
        }
    }
    
    return $room_data;
}

=pod
 
=head1 AUTHOR

Akshay Upadhyay <upadhyay.009@gmail.com>

=head1 DESCRIPTION
 
The script scraps data from wetu contents. The data structure is customized as per wetu html format

=cut
